plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "org.sonarqube" version "3.4.0.2513"
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.medtroniclabs.opensource"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        development {
            keyAlias 'opensource'
            keyPassword 'OpenSource'
            storeFile file('spice_open_source.jks')
            storePassword 'OpenSource'
        }
        release {
            keyAlias 'opensource'
            keyPassword 'OpenSource'
            storeFile file('spice_open_source.jks')
            storePassword 'OpenSource'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    flavorDimensions "version"

    productFlavors {

        development {
            dimension "version"
            applicationIdSuffix ".dev"
            ext {
                server = [debug: "http://localhost:8762/", release: "http://localhost:8762/"]
                admin = [debug: "http://localhost/",release: "http://localhost/"]
                salt = [debug: "spice_opensource", release: "spice_opensource"]
            }
            signingConfig signingConfigs.development
        }
        production {
            dimension "version"
            ext {
                server = [debug: "https://localhost:8762/", release: "https://localhost:8762/"]
                admin = [debug: "http://localhost/",release: "http://localhost/"]
                salt = [debug: "", release: ""]
            }
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        def flavor = variant.productFlavors[0]
        println "Setting up server URL ${flavor.ext.server[variant.buildType.name]} for variant [${variant.name}]"
        variant.buildConfigField "String", "SERVER_URL", "\"${flavor.ext.server[variant.buildType.name]}\""
        variant.buildConfigField "String", "ADMIN_URL", "\"${flavor.ext.admin[variant.buildType.name]}\""
        variant.buildConfigField "String", "SALT", "\"${flavor.ext.salt[variant.buildType.name]}\""
        variant.buildConfigField "String", "INTERNET_CHECK_URL", "\"8.8.8.8\""
        variant.outputs.each {
            output ->
                def formattedDate = new Date().format('yyyy-MM-dd-HH-mm')
                def name = "SPICE_${flavor.name}_${variant.buildType.name}_${formattedDate}.apk"
                output.outputFileName = name
        }
    }
    bundle{
        language{
            enableSplit = false
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    def room_version = '2.5.0'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Kotlin coroutine dependencies
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0'

    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    implementation 'androidx.security:security-crypto:1.1.0-alpha05'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // loading progress
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    implementation 'com.robertlevonyan.view:MaterialChipView:2.2.6'

    implementation 'com.google.android.gms:play-services-location:21.0.1'

    implementation 'androidx.security:security-crypto:1.0.0'

    def lottieVersion = '4.2.2'
    implementation "com.airbnb.android:lottie:$lottieVersion"


    implementation 'net.zetetic:android-database-sqlcipher:4.5.2'
    implementation 'androidx.sqlite:sqlite-ktx:2.3.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'org.bitbucket.b_c:jose4j:0.9.1'

    //in-app update
    implementation 'com.google.android.play:app-update:2.0.1'
    implementation 'com.google.android.play:app-update-ktx:2.0.1'
}

